# RunAI Chat All-in-One Docker Image
# This image contains both PostgreSQL and OpenWebUI in a single container
FROM ubuntu:22.04

# Metadata
LABEL maintainer="RunAI Chat Team"
LABEL description="All-in-one RunAI Chat platform with PostgreSQL and OpenWebUI"
LABEL version="1.0"

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install dependencies
RUN apt-get update && apt-get install -y \
    postgresql-14 \
    postgresql-client-14 \
    postgresql-contrib-14 \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    wget \
    supervisor \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Configure PostgreSQL
USER postgres
RUN /etc/init.d/postgresql start && \
    psql --command "CREATE USER runai_user WITH SUPERUSER PASSWORD 'runai_secure_password';" && \
    createdb -O runai_user runai_chat

USER root

# Configure PostgreSQL
RUN echo "host all  all    0.0.0.0/0  md5" >> /etc/postgresql/14/main/pg_hba.conf
RUN echo "listen_addresses='*'" >> /etc/postgresql/14/main/postgresql.conf

# Copy database schema and data
COPY ../database_util/openwebui_schema_backup.sql /tmp/schema.sql
COPY ../database_util/openwebui_data_backup.sql /tmp/data.sql

# Install OpenWebUI
RUN python3 -m pip install open-webui

# Copy configuration files
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY start-services.sh /start-services.sh
RUN chmod +x /start-services.sh

# Environment variables
ENV DATABASE_URL=postgresql://runai_user:runai_secure_password@localhost:5432/runai_chat
ENV WEBUI_SECRET_KEY=your-secret-key-change-in-production

# Expose ports
EXPOSE 5432 8080

# Create volumes
VOLUME ["/var/lib/postgresql/14/main", "/app/backend/data"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health && pg_isready -U runai_user -d runai_chat

# Start services
CMD ["/start-services.sh"]