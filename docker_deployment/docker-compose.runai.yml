version: '3.8'

services:
  # PostgreSQL Database with RunAI Chat schema
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: ${POSTGRES_CONTAINER:-runai-postgres}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-runai_chat}
      POSTGRES_USER: ${POSTGRES_USER:-runai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-runai_secure_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${POSTGRES_CONTAINER:-runai-postgres}_data:/var/lib/postgresql/data
    networks:
      - ${NETWORK_NAME:-runai-network}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-runai_user} -d ${POSTGRES_DB:-runai_chat}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # OpenWebUI Instance 1 (Primary)
  openwebui-1:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ${OPENWEBUI_1_CONTAINER:-runai-openwebui-1}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-runai_user}:${POSTGRES_PASSWORD:-runai_secure_password}@${POSTGRES_CONTAINER:-runai-postgres}:5432/${POSTGRES_DB:-runai_chat}
      WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY:-your-secret-key-here}
    ports:
      - "${OPENWEBUI_PORT_1:-3001}:8080"
    volumes:
      - ${OPENWEBUI_1_CONTAINER:-runai-openwebui-1}_data:/app/backend/data
    networks:
      - ${NETWORK_NAME:-runai-network}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenWebUI Instance 2 (Load Balancing)
  openwebui-2:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ${OPENWEBUI_2_CONTAINER:-runai-openwebui-2}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-runai_user}:${POSTGRES_PASSWORD:-runai_secure_password}@${POSTGRES_CONTAINER:-runai-postgres}:5432/${POSTGRES_DB:-runai_chat}
      WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY:-your-secret-key-here}
    ports:
      - "${OPENWEBUI_PORT_2:-3009}:8080"
    volumes:
      - ${OPENWEBUI_2_CONTAINER:-runai-openwebui-2}_data:/app/backend/data
    networks:
      - ${NETWORK_NAME:-runai-network}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    container_name: ${NGINX_CONTAINER:-runai-loadbalancer}
    depends_on:
      - openwebui-1
      - openwebui-2
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ${NETWORK_NAME:-runai-network}
    restart: unless-stopped
    profiles:
      - with-loadbalancer

networks:
  ${NETWORK_NAME:-runai-network}:
    driver: bridge
    name: ${NETWORK_NAME:-runai-network}

volumes:
  ${POSTGRES_CONTAINER:-runai-postgres}_data:
    driver: local
    name: ${POSTGRES_CONTAINER:-runai-postgres}_data
  ${OPENWEBUI_1_CONTAINER:-runai-openwebui-1}_data:
    driver: local
    name: ${OPENWEBUI_1_CONTAINER:-runai-openwebui-1}_data
  ${OPENWEBUI_2_CONTAINER:-runai-openwebui-2}_data:
    driver: local
    name: ${OPENWEBUI_2_CONTAINER:-runai-openwebui-2}_data